# .github/workflows/deploy-workers.yml
name: Deploy Cloudflare Workers

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Define app locations and configuration at the top
env:
  # App directories
  SITE_DIR: "site"
  CMS_DIR: "cms"
  API_DIR: "api"

  # Build configuration
  NODE_VERSION: "18"
  PROD_BRANCH: "main"
  DEV_BRANCH: "develop"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      site: ${{ steps.changes.outputs.site }}
      cms: ${{ steps.changes.outputs.cms }}
      api: ${{ steps.changes.outputs.api }}
      deploy-env: ${{ steps.env.outputs.environment }}
    steps:
      - uses: actions/checkout@v5

      - name: Determine deployment environment
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/${{ env.PROD_BRANCH }}" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/${{ env.DEV_BRANCH }}" ]]; then
            echo "environment=development" >> $GITHUB_OUTPUT
          else
            echo "environment=preview" >> $GITHUB_OUTPUT
          fi

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            site:
              - '${{ env.SITE_DIR }}/**'
            cms:
              - '${{ env.CMS_DIR }}/**'
            api:
              - '${{ env.API_DIR }}/**'

  deploy-site:
    needs: detect-changes
    if: needs.detect-changes.outputs.site == 'true' && (github.ref == format('refs/heads/{0}', env.PROD_BRANCH) || github.ref == format('refs/heads/{0}', env.DEV_BRANCH))
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: ${{ needs.detect-changes.outputs.deploy-env }}
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ${{ env.SITE_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.SITE_DIR }}

      - name: Run tests
        run: npm test
        working-directory: ${{ env.SITE_DIR }}

      - name: Build
        run: npm run build
        working-directory: ${{ env.SITE_DIR }}

      - name: Deploy to Cloudflare Workers
        run: npx wrangler deploy --env ${{ env.DEPLOY_ENV }}
        working-directory: ${{ env.SITE_DIR }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy-cms:
    needs: detect-changes
    if: needs.detect-changes.outputs.cms == 'true' && (github.ref == format('refs/heads/{0}', env.PROD_BRANCH) || github.ref == format('refs/heads/{0}', env.DEV_BRANCH))
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: ${{ needs.detect-changes.outputs.deploy-env }}
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ${{ env.CMS_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.CMS_DIR }}

      - name: Run tests
        run: npm test
        working-directory: ${{ env.CMS_DIR }}

      - name: Build
        run: npm run build
        working-directory: ${{ env.CMS_DIR }}

      - name: Deploy to Cloudflare Workers
        run: npx wrangler deploy --env ${{ env.DEPLOY_ENV }}
        working-directory: ${{ env.CMS_DIR }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy-api:
    needs: detect-changes
    if: needs.detect-changes.outputs.api == 'true' && (github.ref == format('refs/heads/{0}', env.PROD_BRANCH) || github.ref == format('refs/heads/{0}', env.DEV_BRANCH))
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: ${{ needs.detect-changes.outputs.deploy-env }}
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ${{ env.API_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.API_DIR }}

      - name: Run tests
        run: npm test
        working-directory: ${{ env.API_DIR }}

      - name: Deploy to Cloudflare Workers
        run: npx wrangler deploy --env ${{ env.DEPLOY_ENV }}
        working-directory: ${{ env.API_DIR }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  notify-deployment:
    needs: [detect-changes, deploy-site, deploy-cms, deploy-api]
    if: always() && (needs.deploy-site.result == 'success' || needs.deploy-cms.result == 'success' || needs.deploy-api.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Summary
        run: |
          echo "üéâ Deployment Summary"
          echo "Branch: ${{ github.ref_name }}"
          echo "Environment: ${{ needs.detect-changes.outputs.deploy-env }}"
          echo "Commit: ${{ github.sha }}"
          echo "Apps deployed:"
          echo "  Main Site: ${{ needs.detect-changes.outputs.site == 'true' && '‚úÖ' || '‚è≠Ô∏è Skipped' }}"
          echo "  CMS: ${{ needs.detect-changes.outputs.cms == 'true' && '‚úÖ' || '‚è≠Ô∏è Skipped' }}"
          echo "  API: ${{ needs.detect-changes.outputs.api == 'true' && '‚úÖ' || '‚è≠Ô∏è Skipped' }}"

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Deployment Preview Ready**
              
              Environment: \`${{ needs.detect-changes.outputs.deploy-env }}\`
              Commit: \`${{ github.sha }}\`
              
              **Apps deployed:**
              - Main Site (\`${{ env.SITE_DIR }}\`): ${{ needs.detect-changes.outputs.site == 'true' && '‚úÖ Deployed' || '‚è≠Ô∏è No changes' }}
              - CMS (\`${{ env.CMS_DIR }}\`): ${{ needs.detect-changes.outputs.cms == 'true' && '‚úÖ Deployed' || '‚è≠Ô∏è No changes' }}
              - API (\`${{ env.API_DIR }}\`): ${{ needs.detect-changes.outputs.api == 'true' && '‚úÖ Deployed' || '‚è≠Ô∏è No changes' }}`
            })
